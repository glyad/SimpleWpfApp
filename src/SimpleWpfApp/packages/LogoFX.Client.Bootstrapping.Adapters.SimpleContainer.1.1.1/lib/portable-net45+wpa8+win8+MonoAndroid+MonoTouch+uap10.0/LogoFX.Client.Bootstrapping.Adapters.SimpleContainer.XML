<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LogoFX.Client.Bootstrapping.Adapters.SimpleContainer</name>
    </assembly>
    <members>
        <member name="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter">
            <summary>
            Represents implementation of ioc container and bootstrapper adapter using Extended Simple Container.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter"/> class.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.#ctor(LogoFX.Practices.IoC.ExtendedSimpleContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterTransient``2">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <typeparam name="TService">Type of service</typeparam>
            <typeparam name="TImplementation">Type of implementation</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterTransient``1">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterTransient(System.Type,System.Type)">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="implementationType">Type of the implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterSingleton``2">
            <summary>
            Registers service in singleton lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterSingleton(System.Type,System.Type)">
            <summary>
            Registers the singleton.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="implementationType">Type of the implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterSingleton``2(System.String)">
            <summary>
            Registers service in singleton lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="key">The key.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterInstance``1(``0)">
            <summary>
            Registers the instance of the service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterInstance(System.Type,System.Object)">
            <summary>
            Registers the instance.
            </summary>
            <param name="dependencyType">Type of the dependency.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterHandler(System.Type,System.Func{System.Object})">
            <summary>
            Registers the dependency via the handler.
            </summary>
            <param name="dependencyType">Type of the dependency.</param><param name="handler">The handler.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterHandler``1(System.Func{``0})">
            <summary>
            Registers the dependency via the handler.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterCollection``1(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Registers the collection.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="dependencyTypes">The dependency types.</param>        
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Registers the collection of the dependencies.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterCollection(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Registers the collection.
            </summary>
            <param name="dependencyType">Type of the dependency.</param>
            <param name="dependencyTypes">The dependency types.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterCollection(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Registers the collection of the dependencies.
            </summary>
            <param name="dependencyType">The dependency type.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.HasHandler(System.Type,System.String)">
            <summary>
            Determines whether the specified service has handler.
            </summary>
            <param name="service">The service.</param>
            <param name="key">The key.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterHandler(System.Type,System.String,System.Func{LogoFX.Practices.IoC.SimpleContainer,System.Object})">
            <summary>
            Registers the handler.
            </summary>
            <param name="service">The service.</param>
            <param name="key">The key.</param>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterPerLifetime``2(System.Func{System.Object})">
            <summary>
            Registers the service in external object scope lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="lifetimeScopeAccess">The lifetime scope access.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.GetInstance``1(System.Type)">
            <summary>
            Gets the instance.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.GetInstance``1">
            <summary>
            Gets the instance.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.GetInstance(System.Type,System.String)">
            <summary>
            Resolves an instance of required service by its type
            </summary>
            <param name="serviceType">Type of service</param>
            <param name="key">Optional service key</param>
            <returns>Instance of service</returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.GetAllInstances(System.Type)">
            <summary>
            Resolves all instances of required service by its type
            </summary>
            <param name="serviceType">Type of service</param>
            <returns>All instances of requested service</returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.BuildUp(System.Object)">
            <summary>
            Resolves instance's dependencies and injects them into the instance
            </summary>
            <param name="instance">Instance to get injected with dependencies</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.Resolve``1">
            <summary>
            Resolves the service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.Resolve(System.Type)">
            <summary>
            Resolves the specified service.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterScoped(System.Func{System.Object},System.Type,System.Type)">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <param name="lifetimeProvider">The lifetime scope.</param>
            <param name="service">The service.</param>
            <param name="implementation">The implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterScoped``2(System.Func{System.Object})">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="lifetimeProvider">The lifetime provider.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.ExtendedSimpleContainerAdapter.RegisterScoped``1(System.Func{System.Object})">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="lifetimeProvider">The lifetime provider.</param>
        </member>
        <member name="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter">
            <summary>
            Represents implementation of IoC container and bootstrapper adapter using Simple Container
            </summary>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter"/> class.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.#ctor(LogoFX.Practices.IoC.SimpleContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterTransient``2">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterTransient``1">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterTransient(System.Type,System.Type)">
            <summary>
            Registers service in transient lifetime style.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="implementationType">Type of the implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterSingleton``2">
            <summary>
            Registers service in singleton lifetime style.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterSingleton(System.Type,System.Type)">
            <summary>
            Registers the singleton.
            </summary>
            <param name="serviceType">Type of the service.</param>
            <param name="implementationType">Type of the implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterInstance``1(``0)">
            <summary>
            Registers the instance of the service.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterInstance(System.Type,System.Object)">
            <summary>
            Registers the instance.
            </summary>
            <param name="dependencyType">Type of the dependency.</param>
            <param name="instance">The instance.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterHandler(System.Type,System.Func{System.Object})">
            <summary>
            Registers the dependency via the handler.
            </summary>
            <param name="dependencyType">Type of the dependency.</param><param name="handler">The handler.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterHandler``1(System.Func{``0})">
            <summary>
            Registers the dependency via the handler.
            </summary>
            <param name="handler">The handler.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterCollection``1(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Registers the collection.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="dependencyTypes">The dependency types.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            Registers the collection of the dependencies.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterCollection(System.Type,System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            Registers the collection.
            </summary>
            <param name="dependencyType">Type of the dependency.</param>
            <param name="dependencyTypes">The dependency types.</param>
            <exception cref="T:System.NotImplementedException"></exception>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterCollection(System.Type,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            Registers the collection of the dependencies.
            </summary>
            <param name="dependencyType">The dependency type.</param>
            <param name="dependencies">The dependencies.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterScoped(System.Func{System.Object},System.Type,System.Type)">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <param name="lifetimeProvider">The lifetime scope.</param>
            <param name="service">The service.</param>
            <param name="implementation">The implementation.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterScoped``2(System.Func{System.Object})">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <typeparam name="TImplementation">The type of the implementation.</typeparam>
            <param name="lifetimeProvider">The lifetime provider.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.RegisterScoped``1(System.Func{System.Object})">
            <summary>
            Registers the dependency per lifetime of another object.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="lifetimeProvider">The lifetime provider.</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.GetInstance``1(System.Type)">
            <summary>
            Gets the service instance.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <param name="serviceType">Type of the service.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.GetInstance``1">
            <summary>
            Gets the service instance.
            </summary>
            <typeparam name="TService">The type of the service.</typeparam>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.GetInstance(System.Type,System.String)">
            <summary>
            Resolves an instance of required service by its type
            </summary>
            <param name="serviceType">Type of service</param>
            <param name="key">Optional service key</param>
            <returns>Instance of service</returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.GetAllInstances(System.Type)">
            <summary>
            Resolves all instances of required service by its type
            </summary>
            <param name="serviceType">Type of service</param>
            <returns>All instances of requested service</returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.BuildUp(System.Object)">
            <summary>
            Resolves instance's dependencies and injects them into the instance
            </summary>
            <param name="instance">Instance to get injected with dependencies</param>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.Resolve``1">
            <summary>
            Resolves service.
            </summary>
            <typeparam name="TService"></typeparam>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.Resolve(System.Type)">
            <summary>
            Resolves service.
            </summary>
            <param name="serviceType"></param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Bootstrapping.Adapters.SimpleContainer.SimpleContainerAdapter.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>        
        </member>
    </members>
</doc>
