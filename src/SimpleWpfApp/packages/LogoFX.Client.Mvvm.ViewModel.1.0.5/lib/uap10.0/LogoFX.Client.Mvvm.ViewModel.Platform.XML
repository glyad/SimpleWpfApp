<?xml version="1.0"?>
<doc>
    <assembly>
        <name>LogoFX.Client.Mvvm.ViewModel.Platform</name>
    </assembly>
    <members>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.EnumEntryViewModel`1">
            <summary>
            Represents a view model which wraps around an enum value.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.EnumEntryViewModel`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.EnumEntryViewModel`1"/> class.
            </summary>
            <param name="obj">The object.</param>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1">
            <summary>
            Represents a view model which wraps around a collection of enum values.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1.Item(`0)">
            <summary>
            Returns an enum model wrapper for specified enum value.
            </summary>
            <param name="item">The specified enum value.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1"/> class.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1.Children">
            <summary>
            Gets the children.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.EnumViewModel`1.Items">
            <summary>
            Gets the items.(GLUE:compatibility to caliburn micro)
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.EnumHelper">
            <summary>
            Helper class for enum operations.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.EnumHelper.GetBoxed(System.Enum)">
            <summary>
            Gets the boxed enum value.
            </summary>
            <param name="s">The unboxed enum value.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.EnumHelper.GetValues``1">
            <summary>
            Gets all enum values from the specified enum type.
            </summary>
            <typeparam name="T">The specified enum type.</typeparam>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.EnumHelper.GetValues(System.Type)">
            <summary>
            Gets the unboxed enum values from the specified enum type.
            </summary>
            <param name="enumType">Type of the enum.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentException">Type ' + enumType.Name + ' is not an enum</exception>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx">
            <summary>
            Extends the WinRT ICollectionView to provide sorting and filtering.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.CanFilter">
            <summary>
            Gets a value that indicates whether this view supports filtering via the
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.Filter"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.Filter">
            <summary>
            Gets or sets a callback used to determine if an item is suitable for inclusion
            in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.CanSort">
            <summary>
            Gets a value that indicates whether this view supports sorting via the 
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.SortDescriptions"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.SortDescriptions">
            <summary>
            Gets a collection of System.ComponentModel.SortDescription objects that describe
            how the items in the collection are sorted in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.CanGroup">
            <summary>
            Gets a value that indicates whether this view supports grouping via the 
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.GroupDescriptions"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.GroupDescriptions">
            <summary>
            Gets a collection of System.ComponentModel.GroupDescription objects that
            describe how the items in the collection are grouped in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.SourceCollection">
            <summary>
            Get the underlying collection.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.CustomSort">
            <summary>
            Gets or sets the custom sort comparer.
            </summary>
            <value>
            The custom sort comparer.
            </value>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.DeferRefresh">
            <summary>
            Enters a defer cycle that you can use to merge changes to the view and delay
            automatic refresh.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.Refresh">
            <summary>
            Refreshes the view applying the current sort and filter conditions.
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView">
            <summary>
            Simple implementation of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx"/> interface, 
            which extends the standard WinRT definition of the <see cref="T:Windows.UI.Xaml.Data.ICollectionView"/> 
            interface to add sorting and filtering.
            </summary>
            <remarks>
            Here's an example that shows how to use the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView"/> class:
            <code>
            // create a simple list
            var list = new List&lt;Rect&gt;();
            for (int i = 0; i &lt; 200; i++)
              list.Add(new Rect(i, i, i, i));
              
            // create collection view based on list
            var cv = new ListCollectionView();
            cv.Source = list;
            
            // apply filter
            cv.Filter = (item) =&gt; { return ((Rect)item).X % 2 == 0; };
            
            // apply sort
            cv.SortDescriptions.Add(new SortDescription("Width", ListSortDirection.Descending));
            
            // show data on grid
            mygrid.ItemsSource = cv;
            </code>
            </remarks>   
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView"/> class.
            </summary>
            <param name="source">The source.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView"/> class.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Source">
            <summary>
            Gets or sets the collection from which to create the view.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Refresh">
            <summary>
            Update the view from the current source, using the current filter and sort settings.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.OnCurrentChanging(Windows.UI.Xaml.Data.CurrentChangingEventArgs)">
            <summary>
            Raises the <see cref="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentChanging"/> event.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.OnCurrentChanged(System.Object)">
            <summary>
            Raises the <see cref="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentChanged"/> event.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.OnVectorChanged(Windows.Foundation.Collections.IVectorChangedEventArgs)">
            <summary>
            Raises the <see cref="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.VectorChanged"/> event.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.DeferRefresh">
            <summary>
            Enters a defer cycle that you can use to merge changes to the view and delay
            automatic refresh.
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.DeferNotifications">
            <summary>
            Class that handles deferring notifications while the view is modified.
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.VectorChangedEventArgs">
            <summary>
            Class that implements IVectorChangedEventArgs so we can fire VectorChanged events.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CanFilter">
            <summary>
            Gets a value that indicates whether this view supports filtering via the
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.Filter"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Filter">
            <summary>
            Gets or sets a callback used to determine if an item is suitable for inclusion
            in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CanGroup">
            <summary>
            Gets a value that indicates whether this view supports grouping via the 
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.GroupDescriptions"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.GroupDescriptions">
            <summary>
            Gets a collection of System.ComponentModel.GroupDescription objects that
            describe how the items in the collection are grouped in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CanSort">
            <summary>
            Gets a value that indicates whether this view supports sorting via the 
            <see cref="P:LogoFX.Client.Mvvm.ViewModel.ICollectionViewEx.SortDescriptions"/> property.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.SortDescriptions">
            <summary>
            Gets a collection of System.ComponentModel.SortDescription objects that describe
            how the items in the collection are sorted in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.SourceCollection">
            <summary>
            Get the underlying collection.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CustomSort">
            <summary>
            Gets or sets the custom sort comparer.
            </summary>
            <value>
            The custom sort comparer.
            </value>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentChanged">
            <summary>
            Occurs after the current item has changed.
            </summary>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentChanging">
            <summary>
            Occurs before the current item changes.
            </summary>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.VectorChanged">
            <summary>
            Occurs when the view collection changes.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CollectionGroups">
            <summary>
            Gets a colletion of top level groups.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentItem">
            <summary>
            Gets the current item in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CurrentPosition">
            <summary>
            Gets the ordinal position of the current item in the view.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.IsCurrentAfterLast">
            <summary>
            Gets a value that indicates whether the CurrentItem of the view is beyond the end of the collection.
            </summary>
            <returns>
            true if the CurrentItem of the view is beyond the end of the collection; otherwise, false.
            </returns>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.IsCurrentBeforeFirst">
            <summary>
            Gets a value that indicates whether the CurrentItem of the view is beyond the beginning of the collection.
            </summary>
            <returns>
            true if the CurrentItem of the view is beyond the beginning of the collection; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentToFirst">
            <summary>
            Sets the first item in the view as the CurrentItem.
            </summary>
            <returns>
            true if the resulting CurrentItem is an item within the view; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentToLast">
            <summary>
            Sets the last item in the view as the CurrentItem.
            </summary>
            <returns>
            true if the resulting CurrentItem is an item within the view; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentToNext">
            <summary>
            Sets the item after the CurrentItem in the view as the CurrentItem.
            </summary>
            <returns>
            true if the resulting CurrentItem is an item within the view; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentToPosition(System.Int32)">
            <summary>
            Sets the item at the specified index to be the CurrentItem in the view.
            </summary>
            <returns>
            true if the resulting CurrentItem is an item within the view; otherwise, false.
            </returns>
            <param name="index">The index of the item to move to.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentToPrevious">
            <summary>
            Sets the item before the CurrentItem in the view as the CurrentItem.
            </summary>
            <returns>
            true if the resulting CurrentItem is an item within the view; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.IndexOf(System.Object)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1"/>.
            </summary>
            <returns>
            The index of <paramref name="item"/> if found in the list; otherwise, -1.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1"/>.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.MoveCurrentTo(System.Object)">
            <summary>
            Sets the specified item to be the CurrentItem in the view.
            </summary>
            <returns>
            true if the resulting CurrentItem is within the view; otherwise, false.
            </returns>
            <param name="item">The item to set as the CurrentItem.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.HasMoreItems">
            <summary>
            Gets a sentinel value that supports incremental loading implementations. See also LoadMoreItemsAsync.
            </summary>
            <returns>
            true if additional unloaded items remain in the view; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.LoadMoreItemsAsync(System.UInt32)">
            <summary>
            Initializes incremental loading from the view.
            </summary>
            <returns>
            The wrapped results of the load operation.
            </returns>
            <param name="count">The number of items to load.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.
            </summary>
            <returns>
            true if the <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only; otherwise, false.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Add(System.Object)">
            <summary>
            Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Insert(System.Int32,System.Object)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1"/> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item"/> should be inserted.</param><param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1"/>.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1"/> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Remove(System.Object)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            true if <paramref name="item"/> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false. This method also returns false if <paramref name="item"/> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param><exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only.</exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1"/> is read-only. </exception>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <returns>
            The element at the specified index.
            </returns>
            <param name="index">The zero-based index of the element to get or set.</param><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="index"/> is not a valid index in the <see cref="T:System.Collections.Generic.IList`1"/>.</exception><exception cref="T:System.NotSupportedException">The property is set and the <see cref="T:System.Collections.Generic.IList`1"/> is read-only.</exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Contains(System.Object)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1"/> contains a specific value.
            </summary>
            <returns>
            true if <paramref name="item"/> is found in the <see cref="T:System.Collections.Generic.ICollection`1"/>; otherwise, false.
            </returns>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1"/>.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.CopyTo(System.Object[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:System.Collections.Generic.ICollection`1"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.
            </summary>
            <param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from <see cref="T:System.Collections.Generic.ICollection`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="arrayIndex">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException"><paramref name="array"/> is null.</exception><exception cref="T:System.ArgumentOutOfRangeException"><paramref name="arrayIndex"/> is less than 0.</exception><exception cref="T:System.ArgumentException">The number of elements in the source <see cref="T:System.Collections.Generic.ICollection`1"/> is greater than the available space from <paramref name="arrayIndex"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </summary>
            <returns>
            The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1"/>.
            </returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            An enumerator that can be used to iterate through the collection.
            </returns>
            <filterpriority>1</filterpriority>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ListCollectionView.OnPropertyChanged(System.String)">
            <summary>
            Raises property change notification.
            </summary>
            <param name="propName"></param>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ListSortDirection">
            <summary>
            Represents list sort direction.
            </summary>
        </member>
        <member name="F:LogoFX.Client.Mvvm.ViewModel.ListSortDirection.Ascending">
            <summary>
            The ascending sort direction.
            </summary>
        </member>
        <member name="F:LogoFX.Client.Mvvm.ViewModel.ListSortDirection.Descending">
            <summary>
            The descending sort direction.
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ChildOperation">
            <summary>
            Operation type
            </summary>
        </member>
        <member name="F:LogoFX.Client.Mvvm.ViewModel.ChildOperation.Add">
            <summary>
            Add operation
            </summary>
        </member>
        <member name="F:LogoFX.Client.Mvvm.ViewModel.ChildOperation.Remove">
            <summary>
            Remove operation
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ChildEventArgs`1">
            <summary>
            Child Operation Event Arguments
            </summary>
            <typeparam name="T"> type of child</typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ChildEventArgs`1.#ctor(LogoFX.Client.Mvvm.ViewModel.ChildOperation,`0,System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="operation"></param>
            <param name="item"></param>
            <param name="index"></param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ChildEventArgs`1.Item">
            <summary>
            Added item
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ChildEventArgs`1.Index">
            <summary>
            Changed index
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ChildEventArgs`1.Action">
            <summary>
            Gets the action.
            </summary>
            <value>The action.</value>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel">
            <summary>
            Base class for any <c>ViewModels</c> that are wrapping some objects list
            </summary>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.ChildrenChanged">
            <summary>
            Occurs when content of children collection is changed.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel"/> class.
            </summary>
            <param name="model">The head model.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.#ctor(System.Object,System.Collections.IEnumerable)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel"/> class.
            </summary>
            <param name="model">The head model.</param>
            <param name="models">The child models.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.#ctor(System.Object,LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModelFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel"/> class.
            </summary>
            <param name="model">The head model.</param>
            <param name="viewModelFactory">The factory for creating child <c>ViewModels</c>.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.#ctor(System.Object,System.Collections.IEnumerable,LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModelFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel"/> class.
            </summary>
            <param name="model">The head model.</param>
            <param name="models">The child models.</param>
            <param name="viewModelFactory">The factory for creating child <c>ViewModels</c>.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.LoadingViewModel">
            <summary>
            Gets or sets the view model which is displayed on loading the collection.
            </summary>
            <value>
            The loading view model.
            </value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.UpdatePriority">
            <summary>
            Gets or sets the update priority.
            </summary>
            <value>The update priority.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.Children">
            <summary>
            Gets the child <c>ViewModels</c> list.
            </summary>
            <value>The children.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.Items">
            <summary>
            Gets the items.(GLUE:compatibility to caliburn micro)
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.ModelLists">
            <summary>
            Gets the models lists collection.
            </summary>
            <value>The model lists.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.Models">
            <summary>
            Gets the models list
            </summary>
            <value>The models.</value>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.OnChildrenChanged(LogoFX.Client.Mvvm.ViewModel.ChildEventArgs{LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel})">
            <summary>
            Occurs when children are changed
            </summary>
            <param name="args">The  instance containing the event data.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.CreateViewModel(LogoFX.Client.Mvvm.ViewModel.Contracts.IViewModel,System.Object)">
            <summary>
            Creates view model
            </summary>
            <param name="parent">Parent model</param>
            <param name="obj">Object for which we making model</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectsListViewModel.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ModelProxyAttribute">
            <summary>
            Represents proxy to the real property on the model.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ModelProxyAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ModelProxyAttribute"/> class.
            </summary>
            <param name="property">The property.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ModelProxyAttribute.Property">
            <summary>
            Gets or sets the property.
            </summary>
            <value>
            The property.
            </value>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1">
            <summary>
            Represents object view model for the specified model.
            </summary>
            <typeparam name="T">The specified model.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1"/> class.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1.ObjectModel">
            <summary>
            ObjectModel property
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel`1.Model">
            <summary>
            Model property
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel">
            <summary>
            <c>ViewModel</c> that wraps arbitrary object
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.#ctor(System.Object)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel"/> class.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel"/> class.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.Model">
            <summary>
            Gets or sets the model.
            </summary>
            <value>The model.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.OnModelPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
            Called when some models property changed.
            </summary>
            <param name="sender">The sender.</param>
            <param name="e">The <see cref="T:System.ComponentModel.PropertyChangedEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.ObjectViewModel.ModelsPropertyChanged">
            <summary>
            Occurs when a model's property is changed.
            </summary>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2">
            <summary>
            Represents collection <c>ViewModel</c> with selection support
            </summary>
            <typeparam name="THead">The type of the head model.</typeparam>
            <typeparam name="TChild">The type of the child models.</typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.#ctor(`0,System.Collections.IEnumerable,System.Func{`1,LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel{`1}},LogoFX.Client.Mvvm.ViewModel.SelectionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2"/> class.
            </summary>
            <param name="head">The head model.</param>
            <param name="models">The child models.</param>
            <param name="creator">The creator method.</param>
            <param name="selectionMode">The selection mode.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.#ctor(`0,System.Collections.IEnumerable,System.Action{LogoFX.Client.Mvvm.ViewModel.SelectorViewModel{`0,`1}},LogoFX.Client.Mvvm.ViewModel.SelectionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2"/> class.
            </summary>
            <param name="head">The head model.</param>
            <param name="models">The child  models.</param>
            <param name="selectionHandler">Selection handler.</param>
            <param name="selectionMode">Selection mode.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.#ctor(`0,System.Collections.IEnumerable,System.Action{LogoFX.Client.Mvvm.ViewModel.SelectorViewModel{`0,`1}},System.Func{`1,LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel{`1}},LogoFX.Client.Mvvm.ViewModel.SelectionMode)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2"/> class.
            </summary>
            <param name="head">The head model.</param>
            <param name="models">The child models.</param>
            <param name="selectionHandler">Selection handler.</param>
            <param name="creator"><c>ViewModels</c> creator.</param>
            <param name="selectionMode">The selection mode.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.OnChildrenSelectionChanged(LogoFX.Client.Mvvm.ViewModel.SelectionChangedEventArgs{LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel{`1}})">
            <summary>
            Occurs when selection changed
            </summary>
            <param name="e">The instance containing the event data.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.SelectedItems">
            <summary>
            Gets the selected items.
            </summary>
            <note>BUGGGGGGGGGG!!! this need to be not TChild</note>
            <value>The selected items.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.SelectedItem">
            <summary>
            Gets the selected item.
            </summary>
            <value>The selected item.</value>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.OnChildrenChanged(LogoFX.Client.Mvvm.ViewModel.ChildEventArgs{LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel})">
            <summary>
            Occurs when children are changed
            </summary>
            <param name="args">The  instance containing the event data.</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.ResetSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.Reset">
            <summary>
            Resets selection status of this instance.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.ClearSelection">
            <summary>
            Resets selection status of this instance.
            </summary>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.SelectionChanged">
            <summary>
            Occurs when selection changed.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.Select(System.Object,System.Boolean)">
            <summary>
            Selects the specified item.
            </summary>
            <param name="item">The item.</param>
            <param name="notify"></param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SelectorViewModel`2.Unselect(System.Object,System.Boolean)">
            <summary>
            Unselects the specified item.
            </summary>
            <param name="item">The specified item.</param>
            <param name="notify">True, if the selection change should raise notification.</param>
            <returns>true if succeeded, otherwise false</returns>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2">
            <summary>
            Simple type safe <c>ViewModel</c> list
            </summary>
            <typeparam name="THead">head model type</typeparam>
            <typeparam name="TChild">children model type</typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2.#ctor(`0,System.Collections.IEnumerable,System.Func{`1,LogoFX.Client.Mvvm.ViewModel.Contracts.IObjectViewModel{`1}})">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2"/> class.
            </summary>
            <param name="obj">The obj.</param>
            <param name="models">The models.</param>
            <param name="creator">The creator.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2.ObjectModel">
            <summary>
            Gets the object model.
            </summary>
            <value>The object model.</value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2.Model">
            <summary>
            Gets the object model.
            </summary>
            <value>The object model.</value>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SimpleObjectsListViewModel`2.CreateViewModel(LogoFX.Client.Mvvm.ViewModel.Contracts.IViewModel,System.Object)">
            <summary>
            Creates view model
            </summary>
            <param name="parent">Parent model</param>
            <param name="obj">Object for which we making model</param>
            <returns></returns>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.SortDescription">
            <summary>
            Represents sort description.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.SortDescription.#ctor(System.Func{System.Object,System.Object},LogoFX.Client.Mvvm.ViewModel.ListSortDirection)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.SortDescription"/> class.
            </summary>
            <param name="valueGetter">The value getter.</param>
            <param name="direction">The direction.</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SortDescription.ValueGetter">
            <summary>
            Gets or sets the value getter.
            </summary>
            <value>
            The value getter.
            </value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.SortDescription.Direction">
            <summary>
            Gets or sets the direction.
            </summary>
            <value>
            The direction.
            </value>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection">
            <summary>
            Represents collection of view models which enables synchronization with its data source(s).
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/> class.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/> class.
            </summary>
            <param name="isBulk">if set to <c>true</c> [is bulk].</param>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.LoadingViewModel">
            <summary>
            Gets or sets the view model which is displayed on loading the collection.
            </summary>
            <value>
            The loading view model.
            </value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.Sources">
            <summary>
            Gets the collection of data sources.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.AddSource(System.Collections.IEnumerable)">
            <summary>
            Adds data source.
            </summary>
            <param name="source"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.RemoveSource(System.Collections.IEnumerable)">
            <summary>
            Removes the source.
            </summary>
            <param name="source">The source.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.ClearSources">
            <summary>
            Clears the data sources.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.FactoryMethod">
            <summary>
            Gets or sets the factory method which is used to create view model from a data source item.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator"/> object that can be used to iterate through the collection.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.CreateWrapper(System.Object)">
            <summary>
            Creates model wrapper using the specified model.
            </summary>
            <param name="obj">The specified model.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Override this method to inject custom logic on collection change.
            </summary>
            <param name="args"></param>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.CollectionChanged">
            <summary>
            Occurs when the collection changes.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.IndexedDictionary`2">
            <summary>
            An indexable Dictionary
            </summary>
            <typeparam name="TKey">type for the key</typeparam>
            <typeparam name="TValue">type for the value</typeparam>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.IndexedDictionary`2.ValidateKeyType">
            <summary>
            Makes sure int is not used as dictionary key:
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.IndexedDictionary`2.TransformKey(`0)">
            <summary>
            Override in derived class to manipulate key
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.IndexedDictionary`2.Clear">
            <summary>
            Clears all values and raises events.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.IndexedDictionary`2.IndexOfKey(`0)">
            <summary>
            Searches for a key that matches the conditions defined by the specified predicate, and returnes a zero-based index of the first occurrence in the list of keys.
            </summary>
            <returns></returns>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.UpdatePriority">
            <summary>
            Gets or sets the update priority.
            </summary>
            <value>
            The update priority.
            </value>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection">
            <summary>
            Represents collection of view models which enables synchronization with its data source(s) and supports selection.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection"/> class.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.#ctor(LogoFX.Client.Mvvm.ViewModel.SelectionMode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection"/> class.
            </summary>
            <param name="selectionMode">The selection mode.</param>
            <param name="isBulk">if set to <c>true</c> [is bulk].</param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
            Override this method to inject custom logic on collection change.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.Select(System.Object,System.Boolean)">
            <summary>
            Selection operation
            </summary>
            <param name="newSelection">item to select </param>
            <param name="notify"></param>
            <returns>old selected item if available</returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.Unselect(System.Object,System.Boolean)">
            <summary>
            Un-selects object
            </summary>
            <param name="newSelection"></param>
            <param name="notify"></param>
            <returns><see langword="true"/> if succeeded, otherwise <see langword="false"/></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.ClearSelection">
            <summary>
            Clears the selection.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.OnSelectionChanged">
            <summary>
            Override this method to inject custom logic after the selection is changed.
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectionHandler">
            <summary>
            Gets or sets the selection handler.
            </summary>
            <value>
            The selection handler.
            </value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectedItem">
            <summary>
            Selected item
            </summary>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectionCount">
            <summary>
            Gets the selection count.
            </summary>
            <value>
            The selection count.
            </value>
        </member>
        <member name="P:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectedItems">
            <summary>
            Selected items
            </summary>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectionChanged">
            <summary>
            Occurs when selection is changed.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.InvokeSelectionChanged(System.EventArgs)">
            <summary>
            Invokes the selection changed event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.SelectionChanging">
            <summary>
            Occurs when selection is changing.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.InvokeSelectionChanging(LogoFX.Client.Mvvm.ViewModel.Contracts.SelectionChangingEventArgs)">
            <summary>
            Invokes the selection changing event.
            </summary>
            <param name="e"></param>
        </member>
        <member name="E:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.PropertyChanged">
            <summary>
            Occurs when a property value changes.
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollection.WithSelection.OnPropertyChanged(System.String)">
            <summary>
            Called when property is changed.
            </summary>
            <param name="p">The p.</param>
        </member>
        <member name="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions">
            <summary>
            Contains extensions for <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/>
            </summary>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions.AsView(LogoFX.Client.Mvvm.ViewModel.WrappingCollection)">
            <summary>
            Creates the view on the specified <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/>.
            </summary>
            <param name="collection">The specified <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/></param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions.WithFiltering(LogoFX.Client.Mvvm.ViewModel.ListCollectionView,System.Predicate{System.Object})">
            <summary>
            Sets the specified filter on the collection view.
            </summary>
            <param name="collectionView">The collection view.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions.WithFiltering``1(LogoFX.Client.Mvvm.ViewModel.ListCollectionView,System.Predicate{``0})">
            <summary>
            Sets the specified filter on the collection view.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collectionView">The collection view.</param>
            <param name="filter">The filter.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions.OrderBy(LogoFX.Client.Mvvm.ViewModel.ListCollectionView,System.Collections.IComparer)">
            <summary>
            Orders the specified collection view using the specified comparer.
            </summary>
            <param name="collectionView">The collection view.</param>
            <param name="comparer">The comparer.</param>
            <returns></returns>
        </member>
        <member name="M:LogoFX.Client.Mvvm.ViewModel.WrappingCollectionExtensions.WithSource``1(``0,System.Collections.IEnumerable)">
            <summary>
            Assigns the specified data source to the specified <see cref="T:LogoFX.Client.Mvvm.ViewModel.WrappingCollection"/>
            </summary>
            <typeparam name="T"></typeparam>
            <param name="collection">The specified collection.</param>
            <param name="source">The source.</param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException">
            collection
            or
            source
            </exception>
        </member>
        <member name="T:Billionaires.Universal.Mvvm.IEditableCollectionView">
            <summary>
            Implements a WinRT version of the IEditableCollectionView interface.
            </summary>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.CanAddNew">
            <summary>
            Gets a value indicating whether a new instance can be added.
            </summary>
            <value>
            <c>true</c> if a new instance can be added; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.CanRemove">
            <summary>
            Gets a value indicating whether a new instance can be removed.
            </summary>
            <value>
            <c>true</c> if a new instance can be removed; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.IsAddingNew">
            <summary>
            Gets a value indicating whether a new instance is being added.
            </summary>
            <value>
            <c>true</c> if a new instance is being added; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.CurrentAddItem">
            <summary>
            Gets the currently added item.
            </summary>
            <value>
            The currently added item.
            </value>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.AddNew">
            <summary>
            Adds the new item.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.CancelNew">
            <summary>
            Cancels the new item editing.
            </summary>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.CommitNew">
            <summary>
            Commits the new item editing.
            </summary>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.CanCancelEdit">
            <summary>
            Gets a value indicating whether the editing can be cancelled.
            </summary>
            <value>
            <c>true</c> if the editing can be cancelled; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.IsEditingItem">
            <summary>
            Gets a value indicating whether an item is being edited.
            </summary>
            <value>
            <c>true</c> if an item is being edited; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Billionaires.Universal.Mvvm.IEditableCollectionView.CurrentEditItem">
            <summary>
            Gets the item that is currently being edited.
            </summary>
            <value>
            The item that is currently being edited.
            </value>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.EditItem(System.Object)">
            <summary>
            Starts item editing.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.CancelEdit">
            <summary>
            Cancels the edit.
            </summary>
        </member>
        <member name="M:Billionaires.Universal.Mvvm.IEditableCollectionView.CommitEdit">
            <summary>
            Commits the edit.
            </summary>
        </member>
    </members>
</doc>
